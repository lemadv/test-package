name: Pre-release Workflow

on:
  push:
    tags:
      - 'v*' # Trigger only for semantic version tags

jobs:
  pre-release:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0 # Ensure full history is available for tag comparison

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18
          registry-url: 'https://registry.npmjs.org/'

      - name: Cache npm tarballs
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: npm-${{ hashFiles('package-lock.json') }}
          restore-keys: |
            npm-

      - name: Configure Git
        run: |
          git config --global user.name "${{ github.actor }}"
          git config --global user.email "${{ github.actor }}@users.noreply.github.com"

      - name: Install dependencies
        run: npm ci

      - name: Publish pre-release to npm
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
        run: npm publish --tag rc
  
      - name: Generate Release Notes
        id: generate-notes
        run: |
          git fetch --tags
          CURRENT_TAG=$(git describe --tags --abbrev=0)
          PREVIOUS_TAG=$(git describe --tags --abbrev=0 "${CURRENT_TAG}^")
          echo "Current tag: $CURRENT_TAG"
          echo "Previous tag: $PREVIOUS_TAG"
          COMMITS=$(git log $PREVIOUS_TAG..$CURRENT_TAG --pretty=format:"- %h %s" --reverse)
          if [ -z "$COMMITS" ]; then
            COMMITS="No commits found between $PREVIOUS_TAG and $CURRENT_TAG."
          fi
          echo "notes=$COMMITS" >> $GITHUB_ENV
        shell: bash

      - name: Create GitHub Release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref_name }}
          release_name: Release ${{ github.ref_name }}
          body: ${{ env.notes }}
          draft: false
          prerelease: true
